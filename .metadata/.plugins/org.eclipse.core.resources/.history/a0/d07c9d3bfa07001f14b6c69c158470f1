import studiplayer.basic.WavParamReader;

public class WavFile extends SampledFile {
		private static long durationResult = 1;
		public WavFile() {

		}

		public WavFile(String path) {
			this.parsePathname(path);
			//this.parseFilename(filename);
		}

		public void readAndSetDurationFromFile() {
			//WavParamReader.readParams(getPathname());
			
			WavParamReader.getFrameRate();
			WavParamReader.getNumberOfFrames();
			
		}

	
		public String toString() {
			return null;
		}

		public static long computeDuration(long numberOfFrames, float frameRate) {
			var test = ((WavParamReader.getNumberOfFrames()/WavParamReader.getFrameRate())*1000000);
			durationResult = (long) Math.floor((WavParamReader.getNumberOfFrames()/WavParamReader.getFrameRate())*1000000);
			return durationResult;
		}
		public long getDuration() {
			computeDuration(WavParamReader.getNumberOfFrames(),WavParamReader.getFrameRate()*1000000);
			return durationResult;
		}
		public static String timeFormatter(long timeInMicroSeconds) {
			
			WavFile wf = new WavFile();
			long durationInSeconds = timeInMicroSeconds/1000000;
			long minutesPart = durationInSeconds/60;
			long secondsPart = durationInSeconds%60;
			return String.format("%02d:%02d", minutesPart,secondsPart);
//			String durationFloat = Float.toString(durationInMinutesAndSeconds);
//			String[] durationString = durationFloat.split("\\.");
//			String minutes = durationString[0];
//			String seconds = durationString.length > 1 ? durationString[1] : "";
//	//		String durationString = String.valueOf(wf.getDuration());
//			String minutesAndSeconds = minutes + ":" + seconds;
//			return minutesAndSeconds;
		}
		@Override
		public void togglePlay() {
			// TODO Auto-generated method stub
			
		}


	}